CMAKE_MINIMUM_REQUIRED(VERSION 3.9)

PROJECT(FriedLiver LANGUAGES CXX CUDA)
SET(CMAKE_CXX_STANDARD 11)

LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR}/CMake)
IF(WIN32)
  FIND_PACKAGE(vcpkg REQUIRED)
  INCLUDE(${vcpkg_toolchain_file})
  LIST(APPEND CMAKE_MODULE_PATH ${vcpkg_dir}/installed/${VCPKG_TARGET_TRIPLET}/share)
ENDIF()

FILE(GLOB TOP_SOURCE ${CMAKE_CURRENT_LIST_DIR}/Source/*.cpp ${CMAKE_CURRENT_LIST_DIR}/Source/*.cu)
FILE(GLOB DXUT_SOURCE ${CMAKE_CURRENT_LIST_DIR}/Source/DXUT/*.cpp ${CMAKE_CURRENT_LIST_DIR}/Source/DXUT/*.cu)
FILE(GLOB Solver_SOURCE ${CMAKE_CURRENT_LIST_DIR}/Source/Solver/*.cpp ${CMAKE_CURRENT_LIST_DIR}/Source/Solver/*.cu)
FILE(GLOB DepthSensing_SOURCE ${CMAKE_CURRENT_LIST_DIR}/Source/DepthSensing/*.cpp ${CMAKE_CURRENT_LIST_DIR}/Source/DepthSensing/*.cu)
FILE(GLOB SiftGPU_SOURCE ${CMAKE_CURRENT_LIST_DIR}/Source/SiftGPU/*.cpp ${CMAKE_CURRENT_LIST_DIR}/Source/SiftGPU/*.cu)
#ADD_EXECUTABLE(FriedLiver ${TOP_SOURCE} ${Solver_SOURCE} ${DepthSensing_SOURCE} ${SiftGPU_SOURCE} ${DXUT_SOURCE})
ADD_EXECUTABLE(FriedLiver ${TOP_SOURCE}  )

FIND_PACKAGE(FreeImage REQUIRED)
IF(WIN32)
  FIND_PACKAGE(DirectX REQUIRED)
ENDIF()
FIND_PACKAGE(Eigen3 REQUIRED)

TARGET_COMPILE_DEFINITIONS(FriedLiver PRIVATE $<$<COMPILE_LANGUAGE:CXX>:_UNICODE>)
TARGET_COMPILE_DEFINITIONS(FriedLiver PRIVATE $<$<COMPILE_LANGUAGE:CXX>:NOMINMAX>)
TARGET_COMPILE_DEFINITIONS(FriedLiver PRIVATE $<$<COMPILE_LANGUAGE:CXX>:_CRT_SECURE_NO_WARNINGS>)
TARGET_COMPILE_DEFINITIONS(FriedLiver PRIVATE $<$<COMPILE_LANGUAGE:CXX>:D3DXFX_LARGEADDRESS_HANDLE>)
TARGET_COMPILE_DEFINITIONS(FriedLiver PRIVATE $<$<COMPILE_LANGUAGE:CXX>:_CONSOLE>)
TARGET_INCLUDE_DIRECTORIES(FriedLiver PRIVATE ${CMAKE_CURRENT_LIST_DIR}/../external/mLib/include)
TARGET_INCLUDE_DIRECTORIES(FriedLiver PRIVATE ${CMAKE_CURRENT_LIST_DIR}/Include/cutil/inc)
TARGET_INCLUDE_DIRECTORIES(FriedLiver PRIVATE ${CMAKE_CURRENT_LIST_DIR}/Include/Uplink)
TARGET_INCLUDE_DIRECTORIES(FriedLiver PRIVATE ${CMAKE_CURRENT_LIST_DIR}/Include)
TARGET_INCLUDE_DIRECTORIES(FriedLiver PRIVATE ${CMAKE_CURRENT_LIST_DIR}/Source)
TARGET_INCLUDE_DIRECTORIES(FriedLiver PRIVATE ${CMAKE_CURRENT_LIST_DIR}/Source/SiftGPU)
TARGET_INCLUDE_DIRECTORIES(FriedLiver PRIVATE ${CMAKE_CURRENT_LIST_DIR}/Source/DXUT/Core)
TARGET_INCLUDE_DIRECTORIES(FriedLiver PRIVATE ${FREEIMAGE_INCLUDE_DIRS})
TARGET_INCLUDE_DIRECTORIES(FriedLiver PRIVATE ${DIRECTX_INCLUDE_DIRS})
TARGET_LINK_LIBRARIES(FriedLiver PRIVATE ${FREEIMAGE_LIBRARIES})
TARGET_LINK_LIBRARIES(FriedLiver PRIVATE Eigen3::Eigen)
